//@version=5
indicator("Analisi Tecnica Avanzata", overlay=true)

// ==================== PARAMETRI PERSONALIZZABILI ====================
// Parametri EMA
emaLengthShort = input.int(9, title="EMA Corta Periodo", minval=1, maxval=200, group="Indicatori")
emaLengthLong = input.int(21, title="EMA Lunga Periodo", minval=1, maxval=200, group="Indicatori")

// Parametri RSI
rsiLength = input.int(14, title="RSI Periodo", minval=1, maxval=100, group="Indicatori")
rsiOverbought = input.int(70, title="RSI Ipercomprato", minval=50, maxval=100, group="Indicatori")
rsiOversold = input.int(30, title="RSI Ipervenduto", minval=0, maxval=50, group="Indicatori")
rsiMiddle = input.int(50, title="RSI Livello Medio", minval=40, maxval=60, group="Indicatori")

// Parametri Supporti e Resistenze
lookbackPeriod = input.int(20, title="Periodo Lookback per S/R", minval=5, maxval=100, group="Supporti/Resistenze")
pivotThreshold = input.float(1.5, title="Sensibilità Pivots", minval=0.5, maxval=5.0, step=0.1, group="Supporti/Resistenze")
srExpiryBars = input.int(50, title="Durata S/R (barre)", minval=10, maxval=200, group="Supporti/Resistenze")

// Parametri Volume
volumeThreshold = input.float(1.5, title="Volume Significativo (x Media)", minval=1.1, maxval=3.0, step=0.1, group="Volume")
volumeMA = input.int(20, title="Media Mobile Volume", minval=5, maxval=50, group="Volume")

// Parametri Pattern
patternEnabled = input.bool(true, title="Abilita Rilevamento Pattern", group="Pattern")
dojiThreshold = input.float(0.1, title="Soglia Doji (%)", minval=0.01, maxval=0.5, step=0.01, group="Pattern")
engulfingThreshold = input.float(120, title="Soglia Engulfing (%)", minval=100, maxval=200, step=5, group="Pattern")

// Parametri Alert
showAlerts = input.bool(true, title="Mostra Segnali Visivi", group="Alert")
alertSize = input.int(5, title="Dimensione Segnali", minval=1, maxval=15, group="Alert")

// ==================== CALCOLO INDICATORI ====================
// EMAs
emaShort = ta.ema(close, emaLengthShort)
emaLong = ta.ema(close, emaLengthLong)

// RSI
rsiValue = ta.rsi(close, rsiLength)

// Volume
volMA = ta.sma(volume, volumeMA)
highVol = volume >= volMA * volumeThreshold

// ==================== SUPPORTI E RESISTENZE ====================
// Funzione per identificare i pivot
pivotHigh = ta.pivothigh(high, lookbackPeriod, lookbackPeriod)
pivotLow = ta.pivotlow(low, lookbackPeriod, lookbackPeriod)

// Array per memorizzare i livelli S/R
var resistanceLevels = array.new_float(0)
var supportLevels = array.new_float(0)
var resistanceAges = array.new_int(0)
var supportAges = array.new_int(0)

// Aggiungi nuovi livelli di resistenza
if not na(pivotHigh)
    resistanceLevel = pivotHigh
    array.push(resistanceLevels, resistanceLevel)
    array.push(resistanceAges, 0)

// Aggiungi nuovi livelli di supporto
if not na(pivotLow)
    supportLevel = pivotLow
    array.push(supportLevels, supportLevel)
    array.push(supportAges, 0)

// Aggiorna età e rimuovi livelli vecchi
if array.size(resistanceLevels) > 0
    for i = array.size(resistanceLevels) - 1 to 0 by 1
        age = array.get(resistanceAges, i) + 1
        array.set(resistanceAges, i, age)
        if age > srExpiryBars
            array.remove(resistanceLevels, i)
            array.remove(resistanceAges, i)

if array.size(supportLevels) > 0
    for i = array.size(supportLevels) - 1 to 0 by 1
        age = array.get(supportAges, i) + 1
        array.set(supportAges, i, age)
        if age > srExpiryBars
            array.remove(supportLevels, i)
            array.remove(supportAges, i)

// ==================== RILEVAMENTO PATTERN ====================
// Doji Pattern
bodySize = math.abs(close - open)
wickSize = high - low
isDoji = patternEnabled and bodySize <= wickSize * dojiThreshold

// Engulfing Pattern
bullishEngulfing = patternEnabled and close > open and 
                   close[1] < open[1] and 
                   close > open[1] and 
                   open < close[1] and
                   (close - open) > (open[1] - close[1]) * engulfingThreshold / 100

bearishEngulfing = patternEnabled and close < open and 
                   close[1] > open[1] and 
                   open > close[1] and 
                   close < open[1] and
                   (open - close) > (close[1] - open[1]) * engulfingThreshold / 100

// ==================== TEST DI SUPPORTI E RESISTENZE ====================
testingSupport = false
testingResistance = false

if array.size(supportLevels) > 0
    for i = 0 to array.size(supportLevels) - 1
        level = array.get(supportLevels, i)
        if low <= level and low >= level * 0.995
            testingSupport := true

if array.size(resistanceLevels) > 0
    for i = 0 to array.size(resistanceLevels) - 1
        level = array.get(resistanceLevels, i)
        if high >= level and high <= level * 1.005
            testingResistance := true

// ==================== SEGNALI DI TRADING ====================
// Condizioni di momentum
bullishMomentum = rsiValue > rsiMiddle and emaShort > emaLong
bearishMomentum = rsiValue < rsiMiddle and emaShort < emaLong

// Breakout di supporto/resistenza
breakoutResistance = false
breakoutSupport = false

if array.size(resistanceLevels) > 0
    for i = 0 to array.size(resistanceLevels) - 1
        level = array.get(resistanceLevels, i)
        if close > level and close[1] <= level
            breakoutResistance := true

if array.size(supportLevels) > 0
    for i = 0 to array.size(supportLevels) - 1
        level = array.get(supportLevels, i)
        if close < level and close[1] >= level
            breakoutSupport := true

// Segnali di trading
buySignal = (breakoutResistance and highVol and bullishMomentum) or 
            (bullishEngulfing and testingSupport)

sellSignal = (breakoutSupport and highVol and bearishMomentum) or 
             (bearishEngulfing and testingResistance)

// ==================== VISUALIZZAZIONE GRAFICA ====================
// Visualizza EMA
plot(emaShort, title="EMA Corta", color=color.blue, linewidth=1)
plot(emaLong, title="EMA Lunga", color=color.red, linewidth=1)

// Visualizza S/R
if array.size(resistanceLevels) > 0
    for i = 0 to array.size(resistanceLevels) - 1
        level = array.get(resistanceLevels, i)
        age = array.get(resistanceAges, i)
        transparency = math.min(90, age * 1.5)
        line.new(bar_index[lookbackPeriod], level, bar_index, level, 
                 color=color.red, width=2, style=line.style_dashed)

if array.size(supportLevels) > 0
    for i = 0 to array.size(supportLevels) - 1
        level = array.get(supportLevels, i)
        age = array.get(supportAges, i)
        transparency = math.min(90, age * 1.5)
        line.new(bar_index[lookbackPeriod], level, bar_index, level, 
                 color=color.green, width=2, style=line.style_dashed)

// Visualizza segnali
if showAlerts
    plotshape(buySignal, title="Segnale di Acquisto", location=location.belowbar, 
              color=color.green, style=shape.triangleup, size=size.normal)
    plotshape(sellSignal, title="Segnale di Vendita", location=location.abovebar, 
              color=color.red, style=shape.triangledown, size=size.normal)
    plotshape(isDoji, title="Doji", location=location.abovebar, 
              color=color.yellow, style=shape.xcross, size=size.tiny)
    plotshape(bullishEngulfing, title="Engulfing Rialzista", location=location.belowbar, 
              color=color.lime, style=shape.cross, size=size.tiny)
    plotshape(bearishEngulfing, title="Engulfing Ribassista", location=location.abovebar, 
              color=color.fuchsia, style=shape.cross, size=size.tiny)

// RSI Plot (separato)
rsiPanel = plot(rsiValue, title="RSI", color=color.purple, display=display.none)
rsiOBLevel = hline(rsiOverbought, "RSI Ipercomprato", color=color.red, display=display.none)
rsiOSLevel = hline(rsiOversold, "RSI Ipervenduto", color=color.green, display=display.none)
rsiMidLevel = hline(rsiMiddle, "RSI Medio", color=color.gray, display=display.none)

// ==================== ALERT DI TRADING ====================
// Alert su condizioni di trading
alertcondition(buySignal, title="Segnale di Acquisto", message="Segnale di ACQUISTO rilevato!")
alertcondition(sellSignal, title="Segnale di Vendita", message="Segnale di VENDITA rilevato!")

// Divergenze RSI (base)
priceHigher = close > close[1] and close[1] > close[2]
priceLower = close < close[1] and close[1] < close[2]
rsiHigher = rsiValue > rsiValue[1] and rsiValue[1] > rsiValue[2]
rsiLower = rsiValue < rsiValue[1] and rsiValue[1] < rsiValue[2]

bearishDivergence = priceHigher and rsiLower and rsiValue > 70
bullishDivergence = priceLower and rsiHigher and rsiValue < 30

if showAlerts
    plotshape(bearishDivergence, title="Divergenza Ribassista", location=location.abovebar, 
              color=color.red, style=shape.diamond, size=size.small)
    plotshape(bullishDivergence, title="Divergenza Rialzista", location=location.belowbar, 
              color=color.green, style=shape.diamond, size=size.small)

alertcondition(bearishDivergence, title="Divergenza Ribassista", message="Divergenza RSI RIBASSISTA rilevata!")
alertcondition(bullishDivergence, title="Divergenza Rialzista", message="Divergenza RSI RIALZISTA rilevata!")